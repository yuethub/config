#!/bin/bash

iconPath=""     # 图标路径
execPath=""     # 可执行文件路径

showHelp()
{
    printf "Usage\n\n"
    printf "  shortcut [OPTIONS] <path-installed>\n\n"
    printf "  Create a shortcut or a startup menu for a specified program(given by path-installed).\n\n"
    printf "Options\n"
    printf "  -f <filename>\t\t= Specify the file name of the shortcut.\n"
    printf "  -h\t\t\t= Show the help infomation.\n"
    printf "  -m\t\t\t= Just create startup menu for the given program.\n"
    printf "  -s\t\t\t= Just create desktop shortcut for the given program.\n\n"
}



# 获取图标路径，$1为搜索路径, $2为搜索关键字
getIconPath()
{
    local searchPath=$1
    local keyword=$2
    local -a iconType=(".png" ".icns" ".ico" ".xpm")

    for (( i=0; i<${#iconType[@]}; i=i+1 ))
    do
        iconPath=$(find $searchPath -type f -name ${keyword}${iconType[i]})
        if [ -n "$iconPath" ]; then
            break
        fi
    done

    if [ -z "$iconPath" ];then
        printf "没有找到相关文件，程序将退出...\n\n"
        exit 1
    fi

    local -i num=0
    printf "为您找到以下图标文件:\n\n"
    for item in $iconPath
    do
        let num++
        printf "$num. $item\n" 
    done
    printf "\n请选择您需要的图标文件序号(1-${num}): "
    read n
    while [ $n -gt $num ] || [ $n -le 0 ]
    do
        printf "\n输入有误，请重新输入(1-${num}): "
        read n
    done
    printf "\n"
    iconPath=$(echo $iconPath | cut -d ' ' -f $n)
}

getExecPath()
{
    local searchPath=$1
    local keyword=$2

    execPath=$(find $searchPath -type f -perm -111 -name ${keyword})

    if [ -z "$execPath" ];then
        printf "没有找到相关文件，程序将退出...\n\n"
        exit 1
    fi

    local -i num=0
    printf "为您找到以下可执行文件:\n\n"
    for item in $execPath
    do
        let num++
        printf "$num. $item\n" 
    done
    printf "\n请选择您需要的可执行文件序号(1-${num}): "
    read n
    while [ $n -gt $num ] || [ $n -le 0 ]
    do
        printf "\n输入有误，请重新输入(1-${num}): "
        read n
    done
    printf "\n"
    execPath=$(echo $execPath | cut -d ' ' -f $n)
}




args=$(getopt -o hmsf: -n "shortcut" -- "$@")
if [ $? != 0 ]; then
    echo "parse command line arguments error."
    exit 1
fi

eval set -- "$args"

while [ -n "$1" ] && [ "$1" != "--" ]
do
    case $1 in 
        -h)
            showHelp
            ;;
        -m)
            startupMenu=1;
            ;;
        -s)
            shortcutEntry=1;
            ;;
        -f) 
            filename=$2;
            shift
            ;;
    esac
    shift
done
installedPath=$2







